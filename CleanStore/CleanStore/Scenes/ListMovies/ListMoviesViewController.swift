//
//  ListMoviesViewController.swift
//  CleanStore
//
//  Created by Felipe Miranda on 10/01/20.
//  Copyright (c) 2020 Felipe Miranda. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ListMoviesDisplayLogic: class {
    func showListMovies(viewModel: ListMovies.Models.ViewModel)
}

class ListMoviesViewController: UIViewController {
    
    
    @IBOutlet weak var listMovieTableView: UITableView!
    
    lazy var worker = ListMoviesWorker()
    lazy var viewModel = ListMovies.Models.ViewModel()
    lazy var presenter = ListMoviesPresenter(viewController: self)
    
    lazy var interactor: ListMoviesBusinessLogic = ListMoviesInteractor(presenter: presenter, worker: worker)
    
    override func viewDidLoad(){
        super.viewDidLoad()
    
        self.listMovieTableView.register(UINib(nibName: "MovieCell", bundle: Bundle.main), forCellReuseIdentifier: "cell")
        interactor.getListMovies()
    }
}

extension ListMoviesViewController: ListMoviesDisplayLogic {
   
    func showListMovies(viewModel: ListMovies.Models.ViewModel) {
        
        self.viewModel = viewModel
        listMovieTableView.delegate = self
        listMovieTableView.dataSource = self
        
        listMovieTableView.reloadData()
    }
}

extension ListMoviesViewController: UITableViewDataSource {
    
    func numberOfSections(in tableView: UITableView) -> Int {
        return self.viewModel.numberOfSections
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return self.viewModel.numberOfRows
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        
        let cell: MovieCell? = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath) as? MovieCell
        
        cell?.setup(movie: self.viewModel.getMovieElement(at: indexPath.row))
        
        return cell ?? UITableViewCell()
    }
    
}

extension ListMoviesViewController: UITableViewDelegate {
    
}
